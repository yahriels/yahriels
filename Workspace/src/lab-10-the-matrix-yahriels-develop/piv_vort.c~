

#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>
#include <math.h>

int main(int argc, char *argv[])
{
  FILE *data;
  char c;
  int count = 0;

  data = fopen(argv[1],"r");

  if(data == NULL)
    {
      printf("Error opening file\n");
      return -1;
    }
  
  char buffer[100];
  fgets(buffer,100,data);
  for(c = fgetc(data); c!= EOF; c = fgetc(data))
    {
      if(c == '\n')
    {
      count++;
    }
    }

  double xpos[count];
  double ypos[count];
  double xvel[count];
  double yvel[count];

  rewind(data);
  char b[100];
  char d[250];
  
  for(int i = 0; i<count; i++)
    {
      fgets(d,250,data);
      fscanf(data,"%lf    %lf        %lf        %lf",&xpos[i],&ypos[i],&xvel[i],&yvel[i]);
    }
  
  for(int t = 0; t<count ; t++)
    {
      xpos[t]/=1000;
      ypos[t]/=1000;
    }
      
  double xposmin = xpos[0];
  double yposmin = ypos[0];
  for(int j =1; j<count;j++)
    {
      if(xpos[j]<xposmin)
    {
      xposmin = xpos[j];
    }
      if(ypos[j]<yposmin)
    {
      yposmin = ypos[j];
    }
    }
  double xposmax = xpos[0];
  double yposmax = ypos[0];
  for(int k =1; k<count;k++)
    {
      if(xpos[k]>xposmax)
    {
      xposmax = xpos[k];
    }
      if(ypos[k]>yposmax)
    {
      yposmax = ypos[k];
    }
    }
  printf("X MIN Pos: %lf\n",xposmin);
  printf("X MAX Pos: %lf\n",xposmax);
  printf("Y MIN Pos: %lf\n",yposmin);
  printf("Y MAX Pos: %lf\n",yposmax);

  int xcount = 0;
  int ycount = 0;

  for(int l = 0; l<count; l++)
    {
      if(xpos[l] != xpos[l+1])
    {
      xcount++;
    }
      if(ypos[l] != ypos[l+1])
    {
      ycount++;
    }
    }
  
  xcount = xcount/ycount;
  printf("COUNT X: %d\n",xcount);
  printf("COUNT Y: %d\n",ycount);

  double xspace = (xposmax - xposmin)/(double)(xcount-1);
  double yspace = (yposmax - yposmin)/(double)(ycount-1);

  printf("SPACE X: %lf\n",xspace);
  printf("SPACE Y: %lf\n",yspace);
  
  double xvel2[ycount][xcount];
  double yvel2[ycount][xcount];
  int count2 = 0;
  int count3 = 0;
  for(int n = 0; n<ycount; n++)
    {
      for(int o = 0; o<xcount; o++)
    {
      xvel2[n][o] = xvel[count2++];
    }
    }
  for(int p = 0; p<ycount; p++)
    {
      for(int q = 0; q<xcount; q++)
    {
      yvel2[p][q] = yvel[count3++];
    }
    }

  int r;
  int h;
  char fname[8] = "Xvel.txt";
  FILE *pfile = fopen(fname,"w");
  for(r = 0;r<ycount;r++)
    {
      for(h = 0; h<xcount;h++)
    {
      fprintf(pfile,"%*lf\t",9,xvel2[r][h]);
    }
      fprintf(pfile,"\n");
    }

  int s;
  int g;
  char fname2[8] = "Yvel.txt";
  FILE *file = fopen(fname2,"w");
  
  for(s = 0;s<ycount;s++)
    {
      for(g = 0; g<xcount;g++)
    {
      fprintf(file,"%*lf\t",9,yvel2[s][g]);
    }
       fprintf(file,"\n");
    }

  
  double vort[ycount - 4][xcount - 4];
  int x;
  int y;
  for(x = 2; x <= (ycount-2); x++)
    {
      for(y = 2; y <= (xcount-2); y++)
    {
      vort[x-2][y-2]=(((-1*yvel2[x][y+2])+(8*yvel2[x][y+1])-(8*yvel2[x][y-1])+yvel2[x][y-2])/(12*xspace)) - (((-1*xvel2[x+2][y])+(8*xvel2[x+1][y])-(8*xvel2[x-1][y])+xvel2[x-2][y])/(12*yspace));
    }
    }

  
  int ii;
  int jj;
  char fname3[8] = "Vort.txt";
  FILE *file2 = fopen(fname3,"w");
  
  for(ii = 0;ii<=(ycount-4);ii++)
    {
      for(jj = 0; jj<=(xcount-4);jj++)
      {
        fprintf(file2,"%*lf\t",9,vort[ii][jj]);
      }
       fprintf(file2,"\n");
    }
  
  return 0;
}

