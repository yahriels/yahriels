y = "Birth Weight (g)") +
theme_minimal()
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ `GENDER (1=M)`, data = Births, alternative = "two.sided")
library(readxl)
Arsenic <- read_excel("Arsenic.xlsx")
View(Arsenic)
## Q4.1
```{r, out.width="60%"}
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q4.1
```{r, out.width="60%"}
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with
attach(hist)
Normal Density Curve", xlab = "Steps")
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
attach(hist)
## Q4.1
```{r, out.width="60%"}
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
attach(hist)
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.4.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
lines(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
curve
# Question 4
## Q4.1
```{r, out.width="60%"}
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.4.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
# Plotting histogram of log-transformed data
hist(x = log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
lines(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
lines(dnorm(log_steps, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
fun <- dnorm(x, mean = mean(steps), sd = sd(steps))
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(fun, add = TRUE, col = "blue", lwd = 2)
## Q4.1
```{r, out.width="60%"}
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.4.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.3
# Shapiro-Wilk test for original data
shapiro_original <- shapiro.test(steps)
# Shapiro-Wilk test for log-transformed data
shapiro_log <- shapiro.test(log_steps)
# Display results
shapiro_original
shapiro_log
## Q.5.5
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
# 1. Histogram of Original Data with Normal Density Curve
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# 2. Log Transformation and Histogram with Normal Density Curve
log_steps <- log(steps)
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
# 3. Shapiro-Wilk Test for Normality
shapiro_original <- shapiro.test(steps)
shapiro_log <- shapiro.test(log_steps)
# Output Shapiro test results
shapiro_original
shapiro_log
attach(steps)
## Q.5.5
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
attach(steps)
attach(mydata)
attach(steps)
# 1. Histogram of Original Data with Normal Density Curve
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
# 2. Log Transformation and Histogram with Normal Density Curve
log_steps <- log(steps)
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
# 3. Shapiro-Wilk Test for Normality
shapiro_original <- shapiro.test(steps)
shapiro_log <- shapiro.test(log_steps)
# Output Shapiro test results
shapiro_original
shapiro_log
# Original Data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
# Histogram with normal density curve
hist(steps, prob = TRUE, main = "Histogram of Daily Steps", xlab = "Steps", col = "lightblue", breaks = 10)
curve(dnorm(x, mean=mean(steps), sd=sd(steps)), col="red", lwd=2, add=TRUE)
View(Arsenic)
# Question 6
## Hypothesis
- Null Hypothesis (Ho): The mean arsenic levels in rice from Arkansas, California, and Texas are the same.
## Assumptions for One-way ANOVA
- Normality: The arsenic levels within each state should be normally distributed. We can use Q-Q plots or the Shapiro-Wilk test to check this.
Arsenic$STATE <- as.factor(Arsenic$STATE)
# 1. Check normality using Q-Q plot for each group
par(mfrow = c(1, 3))  # Set up plotting area
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "Arkansas"], main = "Arkansas")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "Arkansas"])
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "California"], main = "California")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "California"])
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "Texas"], main = "Texas")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "Texas"])
# 2. Perform Levene's test for homogeneity of variance
leveneTest(ARSENIC ~ STATE, data = Arsenic)
# Perform the one-way ANOVA
anova_result <- aov(ARSENIC ~ STATE, data = Arsenic)
# Summary of the ANOVA
summary(anova_result)
# If significant, conduct a post-hoc test to see which groups differ
TukeyHSD(anova_result)
# Visualize the group means
boxplot(ARSENIC ~ STATE, data = Arsenic, main = "Arsenic Levels by State",
xlab = "State", ylab = "Arsenic Levels", col = c("lightblue", "lightgreen", "lightcoral"))
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
#View(Births)
# Convert GENDER to a factor
Births$`GENDER (1=M)` <- as.factor(Births$`GENDER (1=M)`)
levels(Births$`GENDER (1=M)`) <- c("0", "1")
# Check the structure of the data
str(Births)
# Visualize the birth weight distribution
ggplot(Births, aes(x = `GENDER (1=M)`, y = `BIRTH WEIGHT`, fill = 'GENDER (1=M)')) +
geom_boxplot() +
labs(title = "Birth Weight Distribution by Gender",
x = "Gender (1=M)",
y = "Birth Weight (g)") +
theme_minimal()
# Perform normality test for each group (Shapiro-Wilk Test)
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "0"])
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "1"])
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ `GENDER (1=M)`, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(`GENDER (1=M)`) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
## Q.5.1
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
(dnorm(x, mean = mean(log_steps)), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
#View(Births)
# Convert GENDER to a factor
Births$`GENDER (1=M)` <- as.factor(Births$`GENDER (1=M)`)
levels(Births$`GENDER (1=M)`) <- c("0", "1")
# Check the structure of the data
str(Births)
# Visualize the birth weight distribution
ggplot(Births, aes(x = `GENDER (1=M)`, y = `BIRTH WEIGHT`, fill = 'GENDER (1=M)')) +
geom_boxplot() +
labs(title = "Birth Weight Distribution by Gender",
x = "Gender (1=M)",
y = "Birth Weight (g)") +
theme_minimal()
# Perform normality test for each group (Shapiro-Wilk Test)
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "0"])
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "1"])
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ `GENDER (1=M)`, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(`GENDER (1=M)`) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
## Q.5.1
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
#View(Births)
# Convert GENDER to a factor
Births$`GENDER (1=M)` <- as.factor(Births$`GENDER (1=M)`)
levels(Births$`GENDER (1=M)`) <- c("0", "1")
# Check the structure of the data
str(Births)
# Visualize the birth weight distribution
ggplot(Births, aes(x = `GENDER (1=M)`, y = `BIRTH WEIGHT`, fill = 'GENDER (1=M)')) +
geom_boxplot() +
labs(title = "Birth Weight Distribution by Gender",
x = "Gender (1=M)",
y = "Birth Weight (g)") +
theme_minimal()
# Perform normality test for each group (Shapiro-Wilk Test)
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "0"])
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "1"])
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ `GENDER (1=M)`, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(`GENDER (1=M)`) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
## Q.5.1
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.3
# Shapiro-Wilk test for original data
shapiro_original <- shapiro.test(steps)
# Shapiro-Wilk test for log-transformed data
shapiro_log <- shapiro.test(log_steps)
# Display results
shapiro_original
shapiro_log
library(readxl)
Arsenic <- read_excel("Arsenic.xlsx")
View(Arsenic)
Arsenic$STATE <- as.factor(Arsenic$STATE)
# Check assumptions
# 1. Check normality using Q-Q plot for each group
par(mfrow = c(1, 3))  # Set up plotting area
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "Arkansas"], main = "Arkansas")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "Arkansas"])
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "California"], main = "California")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "California"])
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "Texas"], main = "Texas")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "Texas"])
# 2. Perform Levene's test for homogeneity of variance
leveneTest(ARSENIC ~ STATE, data = Arsenic)
# Perform the one-way ANOVA
anova_result <- aov(ARSENIC ~ STATE, data = Arsenic)
# Summary of the ANOVA
summary(anova_result)
# If significant, conduct a post-hoc test to see which groups differ
TukeyHSD(anova_result)
# Visualize the group means
boxplot(ARSENIC ~ STATE, data = Arsenic, main = "Arsenic Levels by State",
xlab = "State", ylab = "Arsenic Levels", col = c("lightblue", "lightgreen", "lightcoral"))
# Question 6
## Hypothesis
- Null Hypothesis (Ho): The mean arsenic levels in rice from Arkansas, California, and Texas are the same.
Arsenic$STATE <- as.factor(Arsenic$STATE)
# 1. Check normality using Q-Q plot for each group
par(mfrow = c(1, 3))  # Set up plotting area
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "Arkansas"], main = "Arkansas")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "Arkansas"])
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "California"], main = "California")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "California"])
qqnorm(Arsenic$ARSENIC[Arsenic$STATE == "Texas"], main = "Texas")
qqline(Arsenic$ARSENIC[Arsenic$STATE == "Texas"])
# 2. Perform Levene's test for homogeneity of variance
leveneTest(ARSENIC ~ STATE, data = Arsenic)
# Perform the one-way ANOVA
anova_result <- aov(ARSENIC ~ STATE, data = Arsenic)
# Summary of the ANOVA
summary(anova_result)
# If significant, conduct a post-hoc test to see which groups differ
TukeyHSD(anova_result)
# Visualize the group means
boxplot(ARSENIC ~ STATE, data = Arsenic, main = "Arsenic Levels by State",
xlab = "State", ylab = "Arsenic Levels", col = c("lightblue", "lightgreen", "lightcoral"))
# If significant, conduct a post-hoc test to see which groups differ
TukeyHSD(anova_result)
# Visualize the group means
boxplot(ARSENIC ~ STATE, data = Arsenic, main = "Arsenic Levels by State",
xlab = "State", ylab = "Arsenic Levels", col = c("lightblue", "lightgreen", "lightcoral"))
# If significant, conduct a post-hoc test to see which groups differ
TukeyHSD(anova_result)
