wilcox.test(`BIRTH WEIGHT` ~ `GENDER (1=M)`, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(`GENDER (1=M)`) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
library(readxl)
IQ_Brain_Size <- read_excel("IQ_Brain_Size.xlsx")
data <- IQ_Brain_Size
library(ggplot2)
# Assumption check: Scatter plot
ggplot(data, aes(x = IQ, y = VOL)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Scatterplot of IQ vs Brain Volume", x = "IQ", y = "Brain Volume (VOL)")
# Pearson correlation test
cor_test <- cor.test(data$IQ, data$VOL)
# Output correlation coefficient and p-value
cor_test
# Plot residuals for assumption check
model <- lm(VOL ~ IQ, data = data)
ggplot(data, aes(x = IQ, y = model$residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(title = "Residual Plot", x = "IQ", y = "Residuals")
# Summary of the linear regression model (optional)
summary(model)
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
## Q.5.1
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.3
# Shapiro-Wilk test for original data
shapiro_original <- shapiro.test(steps)
# Shapiro-Wilk test for log-transformed data
shapiro_log <- shapiro.test(log_steps)
# Display results
shapiro_original
shapiro_log
library(readxl)
arsenic_data <- read_excel("Arsenic.xlsx")
# Convert STATE to a factor
arsenic_data$STATE <- as.factor(arsenic_data$STATE)
# Check the structure of the data
str(arsenic_data)
# Q.6.2. Assumption Checks
# Check for homogeneity of variances using Levene's Test
leveneTest(ARSENIC ~ STATE, data = arsenic_data)
# Check for normality using QQ plots and Shapiro-Wilk test for each group
par(mfrow = c(1, 3))  # Set up a 1x3 plotting area
with(arsenic_data, {
qqnorm(ARSENIC[STATE == "Arkansas"], main = "Arkansas")
qqline(ARSENIC[STATE == "Arkansas"])
qqnorm(ARSENIC[STATE == "California"], main = "California")
qqline(ARSENIC[STATE == "California"])
qqnorm(ARSENIC[STATE == "Texas"], main = "Texas")
qqline(ARSENIC[STATE == "Texas"])
})
shapiro.test(arsenic_data$ARSENIC[arsenic_data$STATE == "Arkansas"])
shapiro.test(arsenic_data$ARSENIC[arsenic_data$STATE == "California"])
shapiro.test(arsenic_data$ARSENIC[arsenic_data$STATE == "Texas"])
# Q.6.3. Perform the one-way ANOVA
anova_model <- aov(ARSENIC ~ STATE, data = arsenic_data)
# Get the summary of the ANOVA (provides MS Between, MS Within, and F value)
summary(anova_model)
cat("Q.6.3. Mean Squared Between (MS Between) = 15.83")
cat("Q.6.4. Mean Squared Between (Ms Within) = 0.69")
cat("Q.6.5. F-Value = 22.95")
# Q.6.6. Interpretation of the p-value
p_value <- .000000568
# Q.6.7. Conclusion based on the p-value
cat("Reject Ho: The mean arsenic levels differ between states since the p-value < 0.005\n")
# Q.6.8. Post-hoc test (Tukey's HSD)
tukey_test <- TukeyHSD(anova_model)
print(tukey_test)
# Load necessary libraries
library(ggplot2)
# Define the data
smallcar <- c(548,782,1188,707,324,320,634,501,274,437)
mcar <- c(194,280,1076,411,617,133,719,656,874,445)
largecar <- c(215,937,953,1636,937,472,882,562,656,433)
# Combine the data into a single dataframe
car_data <- data.frame(
load = c(smallcar, mcar, largecar),
car_type = factor(rep(c("Small Car", "Medium Car", "Large Car"), each = 10))
)
## Q.7.2 Descriptive statistics plot: Boxplot
ggplot(car_data, aes(x = car_type, y = load)) +
geom_boxplot(fill = c("lightblue", "lightgreen", "lightcoral")) +
theme_minimal() +
labs(title = "Load on Left Femur of Crash Test Dummies by Car Type",
x = "Car Type",
y = "Load (lb)")
## Q.7.3 Perform Kruskal-Wallis Test
kruskal_test <- kruskal.test(load ~ car_type, data = car_data)
print(kruskal_test)
## Q.7.4 Interpretation of results
if(kruskal_test$p.value < 0.05) {
cat("Reject the null hypothesis: There is a significant difference in medians between car types.\n")
} else {
cat("Fail to reject the null hypothesis: There is no significant difference in medians between car types.\n")
}
## Q.7.5 Discuss safety
if(median(largecar) < median(smallcar)) {
cat("Based on the medians, larger cars appear to exert less load on the femur, suggesting they might be safer.")
} else {
cat("There is no evidence to suggest larger cars are safer based on this data.")
}
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
#View(Births)
# Convert GENDER to a factor
Births$`GENDER (1=M)` <- as.factor(Births$`GENDER (1=M)`)
levels(Births$`GENDER (1=M)`) <- c("0", "1")
# Check the structure of the data
str(Births)
# Visualize the birth weight distribution
ggplot(Births, aes(x = `GENDER (1=M)`, y = `BIRTH WEIGHT`, fill = 'GENDER (1=M)')) +
geom_boxplot() +
labs(title = "Birth Weight Distribution by Gender",
x = "Gender (1=M)",
y = "Birth Weight (g)") +
theme_minimal()
# Perform normality test for each group (Shapiro-Wilk Test)
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "0"])
shapiro.test(Births$`BIRTH WEIGHT`[Births$`GENDER (1=M)` == "1"])
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ `GENDER (1=M)`, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(`GENDER (1=M)`) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
library(readxl)
IQ_Brain_Size <- read_excel("IQ_Brain_Size.xlsx")
data <- IQ_Brain_Size
library(ggplot2)
# Assumption check: Scatter plot
ggplot(data, aes(x = IQ, y = VOL)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Scatterplot of IQ vs Brain Volume", x = "IQ", y = "Brain Volume (VOL)")
# Pearson correlation test
cor_test <- cor.test(data$IQ, data$VOL)
# Output correlation coefficient and p-value
cor_test
# Plot residuals for assumption check
model <- lm(VOL ~ IQ, data = data)
ggplot(data, aes(x = IQ, y = model$residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
labs(title = "Residual Plot", x = "IQ", y = "Residuals")
# Summary of the linear regression model (optional)
summary(model)
# Original data
set.seed(123)
steps <- c(3200, 2900, 3100, 3000, 2800, 3500, 3100, 3000, 3300, 3400,
2800, 2900, 3200, 3000, 3100, 3300, 3400, 3600, 3500, 3400,
3000, 2900, 3100, 3200, 3100, 3000, 2800, 2900, 3200, 3100,
3000, 3200, 3300, 3400, 3500, 3600, 3400, 3300, 3200, 3100)
## Q.5.1
# Plotting histogram of original data
hist(steps, prob = TRUE, main = "Histogram of Original Step Data with Normal Density Curve", xlab = "Steps")
curve(dnorm(x, mean = mean(steps), sd = sd(steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.2
# Log transformation
log_steps <- log(steps)
# Plotting histogram of log-transformed data
hist(log_steps, prob = TRUE, main = "Histogram of Log-Transformed Step Data with Normal Density Curve", xlab = "Log(Steps)")
curve(dnorm(x, mean = mean(log_steps), sd = sd(log_steps)), add = TRUE, col = "blue", lwd = 2)
## Q.5.3
# Shapiro-Wilk test for original data
shapiro_original <- shapiro.test(steps)
# Shapiro-Wilk test for log-transformed data
shapiro_log <- shapiro.test(log_steps)
# Display results
shapiro_original
shapiro_log
library(readxl)
arsenic_data <- read_excel("Arsenic.xlsx")
# Convert STATE to a factor
arsenic_data$STATE <- as.factor(arsenic_data$STATE)
# Check the structure of the data
str(arsenic_data)
# Q.6.2. Assumption Checks
# Check for homogeneity of variances using Levene's Test
leveneTest(ARSENIC ~ STATE, data = arsenic_data)
# Check for normality using QQ plots and Shapiro-Wilk test for each group
par(mfrow = c(1, 3))  # Set up a 1x3 plotting area
with(arsenic_data, {
qqnorm(ARSENIC[STATE == "Arkansas"], main = "Arkansas")
qqline(ARSENIC[STATE == "Arkansas"])
qqnorm(ARSENIC[STATE == "California"], main = "California")
qqline(ARSENIC[STATE == "California"])
qqnorm(ARSENIC[STATE == "Texas"], main = "Texas")
qqline(ARSENIC[STATE == "Texas"])
})
shapiro.test(arsenic_data$ARSENIC[arsenic_data$STATE == "Arkansas"])
shapiro.test(arsenic_data$ARSENIC[arsenic_data$STATE == "California"])
shapiro.test(arsenic_data$ARSENIC[arsenic_data$STATE == "Texas"])
# Q.6.3. Perform the one-way ANOVA
anova_model <- aov(ARSENIC ~ STATE, data = arsenic_data)
# Get the summary of the ANOVA (provides MS Between, MS Within, and F value)
summary(anova_model)
cat("Q.6.3. Mean Squared Between (MS Between) = 15.83")
cat("Q.6.4. Mean Squared Between (Ms Within) = 0.69")
cat("Q.6.5. F-Value = 22.95")
# Q.6.6. Interpretation of the p-value
p_value <- .000000568
# Q.6.7. Conclusion based on the p-value
cat("Reject Ho: The mean arsenic levels differ between states since the p-value < 0.005\n")
# Q.6.8. Post-hoc test (Tukey's HSD)
tukey_test <- TukeyHSD(anova_model)
print(tukey_test)
# Load necessary libraries
library(ggplot2)
# Define the data
smallcar <- c(548,782,1188,707,324,320,634,501,274,437)
mcar <- c(194,280,1076,411,617,133,719,656,874,445)
largecar <- c(215,937,953,1636,937,472,882,562,656,433)
# Combine the data into a single dataframe
car_data <- data.frame(
load = c(smallcar, mcar, largecar),
car_type = factor(rep(c("Small Car", "Medium Car", "Large Car"), each = 10))
)
## Q.7.2 Descriptive statistics plot: Boxplot
ggplot(car_data, aes(x = car_type, y = load)) +
geom_boxplot(fill = c("lightblue", "lightgreen", "lightcoral")) +
theme_minimal() +
labs(title = "Load on Left Femur of Crash Test Dummies by Car Type",
x = "Car Type",
y = "Load (lb)")
## Q.7.3 Perform Kruskal-Wallis Test
kruskal_test <- kruskal.test(load ~ car_type, data = car_data)
print(kruskal_test)
## Q.7.4 Interpretation of results
if(kruskal_test$p.value < 0.05) {
cat("Reject the null hypothesis: There is a significant difference in medians between car types.\n")
} else {
cat("Fail to reject the null hypothesis: There is no significant difference in medians between car types.\n")
## Q.7.5 Discuss safety
if(median(largecar) > median(smallcar)) {
cat("Based on the medians, larger cars appear to exert less load on the femur, suggesting they might be safer.")
} else {
cat("There is no evidence to suggest larger cars are safer based on this data.")
}
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
# Read the data from Births.xlsx
Births <- read_excel("Births.xlsx")
# Convert GENDER to a factor
Births$GENDER <- as.factor(Births$GENDER)
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
# Read the data from Births.xlsx
Births <- read_excel("Births.xlsx")
# Convert GENDER to a factor
Births$GENDER <- as.factor(Births$GENDER)
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
# Read the data from Births.xlsx
Births <- read_excel("Births.xlsx")
# Convert GENDER to a factor
Births$GENDER <- as.factor(Births$GENDER)
levels(Births$GENDER) <- c("Female", "Male")
# Check the structure of the data
str(Births)
# Visualize the birth weight distribution
ggplot(Births, aes(x = GENDER, y = `BIRTH WEIGHT`, fill = GENDER)) +
geom_boxplot() +
labs(title = "Birth Weight Distribution by Gender",
x = "Gender",
y = "Birth Weight (g)") +
theme_minimal()
# Perform normality test for each group (Shapiro-Wilk Test)
shapiro.test(Births$`BIRTH WEIGHT`[Births$GENDER == "Female"])
shapiro.test(Births$`BIRTH WEIGHT`[Births$GENDER == "Male"])
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ GENDER, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(GENDER) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
library(readxl)
Arsenic <- read_excel("Arsenic.xlsx")
View(Arsenic)
## clean R environment
rm(list = ls(all=TRUE))
graphics.off()
shell("cls")
knitr::opts_chunk$set(echo = TRUE)
# Include Libraries
library(readxl)
library(ggplot2)
library(here)
library(epiR)
library(MASS)
library(nnet)
library(car)
library(PairedData)
library(pwr)
library(dplyr)
library(FSA) #posthoc
# Blood pressure before taking the supplement
before <- c(130, 125, 140, 135, 138, 132, 137, 142, 129, 136, 133, 139, 140, 150)
# Blood pressure after taking the supplement for 8 weeks
after <- c(122, 118, 133, 127, 129, 124, 130, 135, 121, 128, 126, 132, 120, 123)
# Run a paired t-test
t_test_result <- t.test(after, before, paired = TRUE, alternative = "less")
# View the results
print(t_test_result)
# Data
before <- c(20, 22, 19, 5, 23, 21, 25, 22, 24, 10)
after <- c(15, 26, 21, 10, 27, 23, 60, 26, 27, 50)
# Differences
diff <- before - after
# Check normality of the differences (Shapiro-Wilk test)
shapiro.test(diff)
# Perform a paired t-test
t.test(before, after, paired = TRUE)
library(ggplot2)
library(dplyr)
library(readxl)
Births <- read_excel("Births.xlsx")
# Read the data from Births.xlsx
Births <- read_excel("Births.xlsx")
# Convert GENDER to a factor
Births$GENDER <- as.factor(Births$GENDER)
levels(Births$GENDER) <- c("Female", "Male")
# Check the structure of the data
str(Births)
# Visualize the birth weight distribution
ggplot(Births, aes(x = GENDER, y = `BIRTH WEIGHT`, fill = GENDER)) +
geom_boxplot() +
labs(title = "Birth Weight Distribution by Gender",
x = "Gender",
y = "Birth Weight (g)") +
theme_minimal()
# Perform normality test for each group (Shapiro-Wilk Test)
shapiro.test(Births$`BIRTH WEIGHT`[Births$GENDER == "Female"])
shapiro.test(Births$`BIRTH WEIGHT`[Births$GENDER == "Male"])
# Since the data may not be normally distributed, use the Mann-Whitney U test
wilcox.test(`BIRTH WEIGHT` ~ GENDER, data = Births, alternative = "two.sided")
# Display summary statistics
Births %>%
group_by(GENDER) %>%
summarise(median_bw = median(`BIRTH WEIGHT`),
mean_bw = mean(`BIRTH WEIGHT`),
sd_bw = sd(`BIRTH WEIGHT`))
library(readxl)
Arsenic <- read_excel("Arsenic.xlsx")
View(Arsenic)
