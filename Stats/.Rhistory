# Question 7
# Given probabilities
prob_1 <- 0.10
prob_2 <- 0.97
prob_3 <- 0.025
# Finding the Z critical values
z_0.10 <- round(qnorm(prob_1, mean = 0, sd = 1), 2)
z_0.97 <- round(qnorm(prob_2, mean = 0, sd = 1), 2)
z_0.025 <- round(qnorm(prob_3, mean = 0, sd = 1), 2)
# Display the results
z_0.10
z_0.97
z_0.025
# Install Packages and Libraries
#install.packages("datasets")
#install.packages("ggplot2")
#install.packages("MASS")
#install.packages("dplyr")
library(datasets)
library(ggplot2)
library(MASS)
library(dplyr)
#Import Body Data
library(readxl)
Body_Data <- read_excel("C:/Users/yahri/yahriels/Stats/R/Body Data.xlsx")
View(Body_Data)
#Import Body Data
library(readxl)
Body_Data <- read_excel("C:/Users/yahri/yahriels/Stats/R/Body Data.xlsx")
library(readxl)
Body_Data <- read_excel("Body Data.xlsx")
View(Body_Data)
# Question 9
library(readxl)
Body_Data <- read_excel("Body Data.xlsx")
View(Body_Data)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(body_data, Sex == 0)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, Sex == 0)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, Sex == 0)
View(Body_Data)
View(Body_Data)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, Gender == 0)
View(Body_Data)
View(Body_Data)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, GENDER == 0)
# Extract the pulse rates of females
pulse_rates_females <- females$Pulse
View(Body_Data)
# Extract the pulse rates of females
pulse_rates_females <- females$PULSE
# Construct a histogram of females' pulse rates
hist(pulse_rates_females,
main = "Histogram of Females' Pulse Rates",
xlab = "Pulse Rate (beats per minute)",
ylab = "Frequency",
col = "lightblue",
border = "black",
breaks = 10)
# Add a normal distribution curve
x <- seq(min(pulse_rates_females), max(pulse_rates_females), length=100)
y <- dnorm(x, mean=mean(pulse_rates_females), sd=sd(pulse_rates_females))
y <- y * diff(hist(pulse_rates_females, plot = FALSE)$mids[1:2]) * length(pulse_rates_females)
lines(x, y, col="red", lwd=2)
# Check if the distribution appears normal by visual inspection
# Additionally, you might want to perform a statistical test like the Shapiro-Wilk test
shapiro.test(pulse_rates_females)
# Check if the distribution appears normal by visual inspection
# Additionally, you might want to perform a statistical test like the Shapiro-Wilk test
shapiro.test(pulse_rates_females)
# Add a normal distribution curve
x <- seq(min(pulse_rates_females), max(pulse_rates_females), length=100)
y <- dnorm(x, mean=mean(pulse_rates_females), sd=sd(pulse_rates_females))
y <- y * diff(hist(pulse_rates_females, plot = FALSE)$mids[1:2]) * length(pulse_rates_females)
lines(x, y, col="red", lwd=2)
# Check if the distribution appears normal by visual inspection
# Additionally, you might want to perform a statistical test like the Shapiro-Wilk test
shapiro.test(pulse_rates_females)
# To visually assess normality, you could also use a Q-Q plot
qqnorm(pulse_rates_females, main = "Q-Q Plot of Female Pulse Rates")
qqline(pulse_rates_females, col = "red")
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, GENDER == 0)
# Extract the pulse rates of females
female_pulse_rates <- females$PULSE
# Construct a histogram of females' pulse rates
hist(female_pulse_rates,
main = "Histogram of Females' Pulse Rates",
xlab = "Pulse Rate (beats per minute)",
ylab = "Frequency",
col = "lightblue",
border = "black",
breaks = 10)
# Add a density curve
lines(density(female_pulse_rates), col = "red", lwd = 2)
# Add a normal distribution curve for comparison
x <- seq(min(female_pulse_rates), max(female_pulse_rates), length = 100)
y <- dnorm(x, mean = mean(female_pulse_rates), sd = sd(female_pulse_rates))
y <- y * diff(hist(female_pulse_rates, plot = FALSE)$mids[1:2]) * length(female_pulse_rates)
lines(x, y, col = "darkgreen", lwd = 2)
Body_Data <- read_excel("Body Data.xlsx")
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, GENDER == 0)
# Extract the pulse rates of females
female_pulse_rates <- females$PULSE
# Construct a histogram of females' pulse rates
hist(female_pulse_rates,
main = "Histogram of Females' Pulse Rates",
xlab = "Pulse Rate (beats per minute)",
ylab = "Frequency",
col = "lightblue",
border = "black",
breaks = 10)
curve(dnorm(x, mean=mean(female_pulse), sd=sd(female_pulse)),
col="red",
lwd=2,
add=TRUE)
# Construct a histogram of females' pulse rates
hist(female_pulse_rates,
main = "Histogram of Females' Pulse Rates",
xlab = "Pulse Rate (beats per minute)",
ylab = "Frequency",
col = "lightblue",
border = "black",
breaks = 10)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, GENDER == 0)
# Extract the pulse rates of females
female_pulse_rates <- females$PULSE
# Construct a histogram of females' pulse rates
hist(female_pulse_rates,
main = "Histogram of Females' Pulse Rates",
xlab = "Pulse Rate (beats per minute)",
ylab = "Frequency",
col = "lightblue",
border = "black",
breaks = 10)
curve(dnorm(x, mean=mean(female_pulse_rates), sd=sd(female_pulse_rates)),
col="red",
lwd=2,
add=TRUE)
# Add a normal distribution curve for comparison
x <- seq(min(female_pulse_rates), max(female_pulse_rates), length = 100)
y <- dnorm(x, mean = mean(female_pulse_rates), sd = sd(female_pulse_rates))
y <- y * diff(hist(female_pulse_rates, plot = FALSE)$mids[1:2]) * length(female_pulse_rates)
lines(x, y, col = "darkgreen", lwd = 2)
# Filter the data to include only females (0 = Female, 1 = Male)
females <- subset(Body_Data, GENDER == 0)
# Extract the pulse rates of females
female_pulse_rates <- females$PULSE
# Construct a histogram of females' pulse rates
hist(female_pulse_rates,
main = "Histogram of Females' Pulse Rates",
xlab = "Pulse Rate (beats per minute)",
ylab = "Frequency",
col = "lightblue",
border = "black",
breaks = 10)
# Add a normal distribution curve for comparison
x <- seq(min(female_pulse_rates), max(female_pulse_rates), length = 100)
y <- dnorm(x, mean = mean(female_pulse_rates), sd = sd(female_pulse_rates))
y <- y * diff(hist(female_pulse_rates, plot = FALSE)$mids[1:2]) * length(female_pulse_rates)
lines(x, y, col = "darkgreen", lwd = 2)
# Question 10
# Data: Measured radiation emissions (W/kg) from the selected cell phones
radiation_data <- c(0.38, 0.55, 1.54, 1.55, 0.50, 0.60, 0.92, 0.96, 1.00, 0.86, 1.46)
# Calculate the mean and standard deviation of the sample
mean_radiation <- mean(radiation_data)
sd_radiation <- sd(radiation_data)
n <- length(radiation_data)
# Calculate the 90% confidence interval
confidence_level <- 0.90
alpha <- 1 - confidence_level
t_value <- qt(1 - alpha/2, df = n - 1)
# Margin of error
margin_of_error <- t_value * (sd_radiation / sqrt(n))
# Confidence interval
lower_bound <- mean_radiation - margin_of_error
upper_bound <- mean_radiation + margin_of_error
confidence_interval <- c(lower_bound, upper_bound)
# Output the confidence interval
cat("90% Confidence Interval for the population mean:", confidence_interval, "\n")
# Compare with FCC standard of 1.6 W/kg
if (upper_bound < 1.6) {
cat("The result suggests that the population mean radiation is less than the FCC standard of 1.6 W/kg.\n")
} else {
cat("The result does not conclusively suggest that the population mean radiation is less than the FCC standard of 1.6 W/kg.\n")
}
unlink("Yahriel_Salinas-Reyes_7340_HW1_FA24_cache", recursive = TRUE)
library(readxl)
LCData <- read_excel("LCData.xlsx")
View(LCData)
library(readxl)
LCData <- read_excel("LCData.xlsx")
View(LCData)
library(readxl)
LCData <- read_excel("LCData.xlsx")
View(LCData)
library(readxl)
LCData <- read_excel("LCData.xlsx")
View(LCData)
LCData <- read.csv("~/GitHub/yahriels/Stats/R/LCData.xlsx", sep="")
View(LCData)
library(readxl)
LCData <- read_excel("LCData.xlsx")
View(LCData)
# Question 13
#Import LC Data
library(readxl)
LC_Data <- read_excel("C:/Users/yahri/yahriels/Stats/R/LCData.xlsx")
# Question 13
#Import LC Data
library(readxl)
LCData <- read_xlsx("LCData.xlsx")
# View the data structure
str(LCData)
summary(LCData)
# a. Boxplot to examine the relationship between lung capacity and smoking status
boxplot(LC ~ Smoke, data = LCData,
main = "Lung Capacity by Smoking Status",
xlab = "Smoking Status",
ylab = "Lung Capacity (liters)",
col = c("lightblue", "lightgreen"))
# b. State the hypotheses
cat("\n Null Hypothesis (Ho): There is no difference in mean lung capacity between smokers and nonsmokers (μ_smokers = μ_nonsmokers).\n")
cat("Alternative Hypothesis (Ha): There is a difference in mean lung capacity between smokers and nonsmokers (μ_smokers ≠ μ_nonsmokers).\n")
# Assumptions check
cat("1. Normality: Check if lung capacities are approximately normally distributed for each group. (can use histograms or Shapiro-Wilk test)\n")
cat("2. Equal variances: Check if the variances of lung capacities are equal for smokers and nonsmokers. (can use F-test)\n")
# Normality check using Shapiro-Wilk test
shapiro.test(LCData$LC[LCData$Smoke == "yes"])
shapiro.test(LCData$LC[LCData$Smoke == "no"])
# Variance check using Bartlett's test
bartlett.test(LC ~ Smoke, data = LCData)
# c. Decide on a test type and significance level
# Given the research question, a two-sided test is appropriate.
# Set significance level (alpha)
alpha <- 0.05
# d. Perform t-test assuming equal variances
t_test_result <- t.test(LC ~ Smoke, data = LCData, var.equal = TRUE)
t_test_result
# e. Interpret the R output and identify key statistics
test_statistic <- t_test_result$statistic
df <- t_test_result$parameter
p_value <- t_test_result$p.value
CI <- t_test_result$conf.int
means <- t_test_result$estimate
# Print out the key statistics
cat("Test Statistic (t):", test_statistic, "\n")
cat("Degrees of Freedom (df):", df, "\n")
cat("P-value:", p_value, "\n")
cat("95% Confidence Interval:", CI, "\n")
cat("Means for Smokers and Nonsmokers:", means, "\n")
# f. Interpret the CI and use it to conclude
# If the 95% CI does not include 0, we reject the null hypothesis (Ho).
if(CI[1] > 0 | CI[2] < 0) {
cat("Reject Ho: There is a significant difference in lung capacity between smokers and nonsmokers.\n")
} else {
cat("Fail to Reject Ho: There is no significant difference in lung capacity between smokers and nonsmokers.\n")
}
# g. Manually calculate the mean difference’s 95% CI
n1 <- length(LCData$LC[LCData$Smoke == "yes"])
n2 <- length(LCData$LC[LCData$Smoke == "no"])
mean_diff <- means[1] - means[2]
pooled_sd <- sqrt(((n1-1)*var(LCData$LC[LCData$Smoke == "yes"]) +
(n2-1)*var(LCData$LC[LCData$Smoke == "no"])) / (n1 + n2 - 2))
se_diff <- pooled_sd * sqrt(1/n1 + 1/n2)
manual_CI <- mean_diff + c(-1, 1) * qt(1 - alpha/2, df) * se_diff
cat("Manually Calculated 95% Confidence Interval for Mean Difference:", manual_CI, "\n")
# h. Manually calculate the t-statistic and p-value
manual_t_statistic <- mean_diff / se_diff
manual_p_value <- 2 * pt(-abs(manual_t_statistic), df)
cat("Manually Calculated t-Statistic:", manual_t_statistic, "\n")
cat("Manually Calculated P-value:", manual_p_value, "\n")
# Conclusion based on manual calculations
if(manual_p_value < alpha) {
cat("Reject Ho based on manual calculation: There is a significant difference in lung capacity between smokers and nonsmokers.\n")
} else {
cat("Fail to Reject Ho based on manual calculation: There is no significant difference in lung capacity between smokers and nonsmokers.\n")
}
